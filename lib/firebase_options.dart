/*
 * Copyright (c) 2023. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
 * Morbi non lorem porttitor neque feugiat blandit. Ut vitae ipsum eget quam lacinia accumsan.
 * Etiam sed turpis ac ipsum condimentum fringilla. Maecenas magna.
 * Proin dapibus sapien vel ante. Aliquam erat volutpat. Pellentesque sagittis ligula eget metus.
 * Vestibulum commodo. Ut rhoncus gravida arcu.
 */

// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';

/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
              'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
              'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
              'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyBTuRlhbALweYNRSrZWJnYZpowmJxX9cSs',
    appId: '1:325533563947:web:e3f6e60e3cd3fc1a06fe6e',
    messagingSenderId: '325533563947',
    projectId: 'naouma-30072023',
    authDomain: 'naouma-30072023.firebaseapp.com',
    storageBucket: 'naouma-30072023.appspot.com',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyCQbgVi9nPbJe3tjdf3ydmmjbHcs8WfDIs',
    appId: '1:325533563947:android:f68bac47181b4a5f06fe6e',
    messagingSenderId: '325533563947',
    projectId: 'naouma-30072023',
    storageBucket: 'naouma-30072023.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyBxqP9t-Rl_3XKEnFdqNEVaUOhDwm4Lxko',
    appId: '1:325533563947:ios:ab512e5de09b644c06fe6e',
    messagingSenderId: '325533563947',
    projectId: 'naouma-30072023',
    storageBucket: 'naouma-30072023.appspot.com',
    iosClientId:
    '325533563947-hpm3f9rjjpp04bagieicef270tmbq1nq.apps.googleusercontent.com',
    iosBundleId: 'com.onoo.naouma',
  );
}
